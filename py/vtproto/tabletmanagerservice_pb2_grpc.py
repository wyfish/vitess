# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import tabletmanagerdata_pb2 as tabletmanagerdata__pb2


class TabletManagerStub(object):
  """TabletManager is a service definition for tabletmanagerdata.TabletManager.

  Various read-only methods

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ping = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/Ping',
        request_serializer=tabletmanagerdata__pb2.PingRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.PingResponse.FromString,
        )
    self.Sleep = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/Sleep',
        request_serializer=tabletmanagerdata__pb2.SleepRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SleepResponse.FromString,
        )
    self.ExecuteHook = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ExecuteHook',
        request_serializer=tabletmanagerdata__pb2.ExecuteHookRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ExecuteHookResponse.FromString,
        )
    self.GetSchema = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/GetSchema',
        request_serializer=tabletmanagerdata__pb2.GetSchemaRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.GetSchemaResponse.FromString,
        )
    self.GetPermissions = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/GetPermissions',
        request_serializer=tabletmanagerdata__pb2.GetPermissionsRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.GetPermissionsResponse.FromString,
        )
    self.SetReadOnly = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/SetReadOnly',
        request_serializer=tabletmanagerdata__pb2.SetReadOnlyRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SetReadOnlyResponse.FromString,
        )
    self.SetReadWrite = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/SetReadWrite',
        request_serializer=tabletmanagerdata__pb2.SetReadWriteRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SetReadWriteResponse.FromString,
        )
    self.ChangeType = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ChangeType',
        request_serializer=tabletmanagerdata__pb2.ChangeTypeRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ChangeTypeResponse.FromString,
        )
    self.RefreshState = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/RefreshState',
        request_serializer=tabletmanagerdata__pb2.RefreshStateRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.RefreshStateResponse.FromString,
        )
    self.RunHealthCheck = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/RunHealthCheck',
        request_serializer=tabletmanagerdata__pb2.RunHealthCheckRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.RunHealthCheckResponse.FromString,
        )
    self.IgnoreHealthError = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/IgnoreHealthError',
        request_serializer=tabletmanagerdata__pb2.IgnoreHealthErrorRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.IgnoreHealthErrorResponse.FromString,
        )
    self.ReloadSchema = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ReloadSchema',
        request_serializer=tabletmanagerdata__pb2.ReloadSchemaRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ReloadSchemaResponse.FromString,
        )
    self.PreflightSchema = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/PreflightSchema',
        request_serializer=tabletmanagerdata__pb2.PreflightSchemaRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.PreflightSchemaResponse.FromString,
        )
    self.ApplySchema = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ApplySchema',
        request_serializer=tabletmanagerdata__pb2.ApplySchemaRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ApplySchemaResponse.FromString,
        )
    self.LockTables = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/LockTables',
        request_serializer=tabletmanagerdata__pb2.LockTablesRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.LockTablesResponse.FromString,
        )
    self.UnlockTables = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/UnlockTables',
        request_serializer=tabletmanagerdata__pb2.UnlockTablesRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.UnlockTablesResponse.FromString,
        )
    self.ExecuteFetchAsDba = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ExecuteFetchAsDba',
        request_serializer=tabletmanagerdata__pb2.ExecuteFetchAsDbaRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ExecuteFetchAsDbaResponse.FromString,
        )
    self.ExecuteFetchAsAllPrivs = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ExecuteFetchAsAllPrivs',
        request_serializer=tabletmanagerdata__pb2.ExecuteFetchAsAllPrivsRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ExecuteFetchAsAllPrivsResponse.FromString,
        )
    self.ExecuteFetchAsApp = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ExecuteFetchAsApp',
        request_serializer=tabletmanagerdata__pb2.ExecuteFetchAsAppRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ExecuteFetchAsAppResponse.FromString,
        )
    self.SubordinateStatus = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/SubordinateStatus',
        request_serializer=tabletmanagerdata__pb2.SubordinateStatusRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SubordinateStatusResponse.FromString,
        )
    self.MainPosition = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/MainPosition',
        request_serializer=tabletmanagerdata__pb2.MainPositionRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.MainPositionResponse.FromString,
        )
    self.StopSubordinate = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/StopSubordinate',
        request_serializer=tabletmanagerdata__pb2.StopSubordinateRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.StopSubordinateResponse.FromString,
        )
    self.StopSubordinateMinimum = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/StopSubordinateMinimum',
        request_serializer=tabletmanagerdata__pb2.StopSubordinateMinimumRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.StopSubordinateMinimumResponse.FromString,
        )
    self.StartSubordinate = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/StartSubordinate',
        request_serializer=tabletmanagerdata__pb2.StartSubordinateRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.StartSubordinateResponse.FromString,
        )
    self.StartSubordinateUntilAfter = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/StartSubordinateUntilAfter',
        request_serializer=tabletmanagerdata__pb2.StartSubordinateUntilAfterRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.StartSubordinateUntilAfterResponse.FromString,
        )
    self.TabletExternallyReparented = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/TabletExternallyReparented',
        request_serializer=tabletmanagerdata__pb2.TabletExternallyReparentedRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.TabletExternallyReparentedResponse.FromString,
        )
    self.TabletExternallyElected = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/TabletExternallyElected',
        request_serializer=tabletmanagerdata__pb2.TabletExternallyElectedRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.TabletExternallyElectedResponse.FromString,
        )
    self.GetSubordinates = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/GetSubordinates',
        request_serializer=tabletmanagerdata__pb2.GetSubordinatesRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.GetSubordinatesResponse.FromString,
        )
    self.VReplicationExec = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/VReplicationExec',
        request_serializer=tabletmanagerdata__pb2.VReplicationExecRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.VReplicationExecResponse.FromString,
        )
    self.VReplicationWaitForPos = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/VReplicationWaitForPos',
        request_serializer=tabletmanagerdata__pb2.VReplicationWaitForPosRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.VReplicationWaitForPosResponse.FromString,
        )
    self.ResetReplication = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/ResetReplication',
        request_serializer=tabletmanagerdata__pb2.ResetReplicationRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.ResetReplicationResponse.FromString,
        )
    self.InitMain = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/InitMain',
        request_serializer=tabletmanagerdata__pb2.InitMainRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.InitMainResponse.FromString,
        )
    self.PopulateReparentJournal = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/PopulateReparentJournal',
        request_serializer=tabletmanagerdata__pb2.PopulateReparentJournalRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.PopulateReparentJournalResponse.FromString,
        )
    self.InitSubordinate = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/InitSubordinate',
        request_serializer=tabletmanagerdata__pb2.InitSubordinateRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.InitSubordinateResponse.FromString,
        )
    self.DemoteMain = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/DemoteMain',
        request_serializer=tabletmanagerdata__pb2.DemoteMainRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.DemoteMainResponse.FromString,
        )
    self.UndoDemoteMain = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/UndoDemoteMain',
        request_serializer=tabletmanagerdata__pb2.UndoDemoteMainRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.UndoDemoteMainResponse.FromString,
        )
    self.PromoteSubordinateWhenCaughtUp = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/PromoteSubordinateWhenCaughtUp',
        request_serializer=tabletmanagerdata__pb2.PromoteSubordinateWhenCaughtUpRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.PromoteSubordinateWhenCaughtUpResponse.FromString,
        )
    self.SubordinateWasPromoted = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/SubordinateWasPromoted',
        request_serializer=tabletmanagerdata__pb2.SubordinateWasPromotedRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SubordinateWasPromotedResponse.FromString,
        )
    self.SetMain = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/SetMain',
        request_serializer=tabletmanagerdata__pb2.SetMainRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SetMainResponse.FromString,
        )
    self.SubordinateWasRestarted = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/SubordinateWasRestarted',
        request_serializer=tabletmanagerdata__pb2.SubordinateWasRestartedRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.SubordinateWasRestartedResponse.FromString,
        )
    self.StopReplicationAndGetStatus = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/StopReplicationAndGetStatus',
        request_serializer=tabletmanagerdata__pb2.StopReplicationAndGetStatusRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.StopReplicationAndGetStatusResponse.FromString,
        )
    self.PromoteSubordinate = channel.unary_unary(
        '/tabletmanagerservice.TabletManager/PromoteSubordinate',
        request_serializer=tabletmanagerdata__pb2.PromoteSubordinateRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.PromoteSubordinateResponse.FromString,
        )
    self.Backup = channel.unary_stream(
        '/tabletmanagerservice.TabletManager/Backup',
        request_serializer=tabletmanagerdata__pb2.BackupRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.BackupResponse.FromString,
        )
    self.RestoreFromBackup = channel.unary_stream(
        '/tabletmanagerservice.TabletManager/RestoreFromBackup',
        request_serializer=tabletmanagerdata__pb2.RestoreFromBackupRequest.SerializeToString,
        response_deserializer=tabletmanagerdata__pb2.RestoreFromBackupResponse.FromString,
        )


class TabletManagerServicer(object):
  """TabletManager is a service definition for tabletmanagerdata.TabletManager.

  Various read-only methods

  """

  def Ping(self, request, context):
    """Ping returns the input payload
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Sleep(self, request, context):
    """Sleep sleeps for the provided duration
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteHook(self, request, context):
    """ExecuteHook executes the hook remotely
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSchema(self, request, context):
    """GetSchema asks the tablet for its schema
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPermissions(self, request, context):
    """GetPermissions asks the tablet for its permissions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetReadOnly(self, request, context):
    """
    Various read-write methods


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetReadWrite(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChangeType(self, request, context):
    """ChangeType asks the remote tablet to change its type
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RefreshState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunHealthCheck(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IgnoreHealthError(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReloadSchema(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PreflightSchema(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ApplySchema(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LockTables(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnlockTables(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteFetchAsDba(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteFetchAsAllPrivs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteFetchAsApp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubordinateStatus(self, request, context):
    """
    Replication related methods


    SubordinateStatus returns the current subordinate status.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MainPosition(self, request, context):
    """MainPosition returns the current main position
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopSubordinate(self, request, context):
    """StopSubordinate makes mysql stop its replication
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopSubordinateMinimum(self, request, context):
    """StopSubordinateMinimum stops the mysql replication after it reaches
    the provided minimum point
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartSubordinate(self, request, context):
    """StartSubordinate starts the mysql replication
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartSubordinateUntilAfter(self, request, context):
    """StartSubordinate starts the mysql replication until and including
    the provided position
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TabletExternallyReparented(self, request, context):
    """TabletExternallyReparented tells a tablet that its underlying MySQL is
    currently the main. It is only used in environments (tabletmanagerdata.such as Vitess+MoB)
    in which MySQL is reparented by some agent external to Vitess, and then
    that agent simply notifies Vitess.

    This call is idempotent with respect to a single target tablet.
    However, the tablet assumes there is a cooling-off period following the
    initial external reparent from A to B, before this call is repeated on any
    tablet other than B. This assumption is configurable with the vttablet flag
    "finalize_external_reparent_timeout".

    For more information, see the design doc at go/vt-fast-failover.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TabletExternallyElected(self, request, context):
    """TabletExternallyElected is an notification that may be sent in
    anticipation of potentially later sending TabletExternallyReparented.
    The tablet can use this extra lead time to prepare to react quickly if
    TabletExternallyReparented does follow.

    This call is effectively a no-op if it is not followed by a call to
    TabletExternallyReparented, so the external agent doing the reparent can
    still change its mind.

    The agent does not need to wait for this call or cancel it before calling
    TabletExternallyReparented if the external reparent operation finishes
    before TabletExternallyElected returns.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubordinates(self, request, context):
    """GetSubordinates asks for the list of mysql subordinates
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VReplicationExec(self, request, context):
    """VReplication API
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VReplicationWaitForPos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetReplication(self, request, context):
    """
    Reparenting related functions


    ResetReplication makes the target not replicating
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InitMain(self, request, context):
    """InitMain initializes the tablet as a main
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PopulateReparentJournal(self, request, context):
    """PopulateReparentJournal tells the tablet to add an entry to its
    reparent journal
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InitSubordinate(self, request, context):
    """InitSubordinate tells the tablet to reparent to the main unconditionally
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DemoteMain(self, request, context):
    """DemoteMain tells the soon-to-be-former main it's gonna change
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UndoDemoteMain(self, request, context):
    """UndoDemoteMain reverts all changes made by DemoteMain
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PromoteSubordinateWhenCaughtUp(self, request, context):
    """PromoteSubordinateWhenCaughtUp tells the remote tablet to catch up,
    and then be the main
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubordinateWasPromoted(self, request, context):
    """SubordinateWasPromoted tells the remote tablet it is now the main
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetMain(self, request, context):
    """SetMain tells the subordinate to reparent
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubordinateWasRestarted(self, request, context):
    """SubordinateWasRestarted tells the remote tablet its main has changed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopReplicationAndGetStatus(self, request, context):
    """StopReplicationAndGetStatus stops MySQL replication, and returns the
    replication status
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PromoteSubordinate(self, request, context):
    """PromoteSubordinate makes the subordinate the new main
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Backup(self, request, context):
    """
    Backup related methods


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RestoreFromBackup(self, request, context):
    """RestoreFromBackup deletes all local data and restores it from the latest backup.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TabletManagerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=tabletmanagerdata__pb2.PingRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.PingResponse.SerializeToString,
      ),
      'Sleep': grpc.unary_unary_rpc_method_handler(
          servicer.Sleep,
          request_deserializer=tabletmanagerdata__pb2.SleepRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SleepResponse.SerializeToString,
      ),
      'ExecuteHook': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteHook,
          request_deserializer=tabletmanagerdata__pb2.ExecuteHookRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ExecuteHookResponse.SerializeToString,
      ),
      'GetSchema': grpc.unary_unary_rpc_method_handler(
          servicer.GetSchema,
          request_deserializer=tabletmanagerdata__pb2.GetSchemaRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.GetSchemaResponse.SerializeToString,
      ),
      'GetPermissions': grpc.unary_unary_rpc_method_handler(
          servicer.GetPermissions,
          request_deserializer=tabletmanagerdata__pb2.GetPermissionsRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.GetPermissionsResponse.SerializeToString,
      ),
      'SetReadOnly': grpc.unary_unary_rpc_method_handler(
          servicer.SetReadOnly,
          request_deserializer=tabletmanagerdata__pb2.SetReadOnlyRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SetReadOnlyResponse.SerializeToString,
      ),
      'SetReadWrite': grpc.unary_unary_rpc_method_handler(
          servicer.SetReadWrite,
          request_deserializer=tabletmanagerdata__pb2.SetReadWriteRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SetReadWriteResponse.SerializeToString,
      ),
      'ChangeType': grpc.unary_unary_rpc_method_handler(
          servicer.ChangeType,
          request_deserializer=tabletmanagerdata__pb2.ChangeTypeRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ChangeTypeResponse.SerializeToString,
      ),
      'RefreshState': grpc.unary_unary_rpc_method_handler(
          servicer.RefreshState,
          request_deserializer=tabletmanagerdata__pb2.RefreshStateRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.RefreshStateResponse.SerializeToString,
      ),
      'RunHealthCheck': grpc.unary_unary_rpc_method_handler(
          servicer.RunHealthCheck,
          request_deserializer=tabletmanagerdata__pb2.RunHealthCheckRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.RunHealthCheckResponse.SerializeToString,
      ),
      'IgnoreHealthError': grpc.unary_unary_rpc_method_handler(
          servicer.IgnoreHealthError,
          request_deserializer=tabletmanagerdata__pb2.IgnoreHealthErrorRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.IgnoreHealthErrorResponse.SerializeToString,
      ),
      'ReloadSchema': grpc.unary_unary_rpc_method_handler(
          servicer.ReloadSchema,
          request_deserializer=tabletmanagerdata__pb2.ReloadSchemaRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ReloadSchemaResponse.SerializeToString,
      ),
      'PreflightSchema': grpc.unary_unary_rpc_method_handler(
          servicer.PreflightSchema,
          request_deserializer=tabletmanagerdata__pb2.PreflightSchemaRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.PreflightSchemaResponse.SerializeToString,
      ),
      'ApplySchema': grpc.unary_unary_rpc_method_handler(
          servicer.ApplySchema,
          request_deserializer=tabletmanagerdata__pb2.ApplySchemaRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ApplySchemaResponse.SerializeToString,
      ),
      'LockTables': grpc.unary_unary_rpc_method_handler(
          servicer.LockTables,
          request_deserializer=tabletmanagerdata__pb2.LockTablesRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.LockTablesResponse.SerializeToString,
      ),
      'UnlockTables': grpc.unary_unary_rpc_method_handler(
          servicer.UnlockTables,
          request_deserializer=tabletmanagerdata__pb2.UnlockTablesRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.UnlockTablesResponse.SerializeToString,
      ),
      'ExecuteFetchAsDba': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteFetchAsDba,
          request_deserializer=tabletmanagerdata__pb2.ExecuteFetchAsDbaRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ExecuteFetchAsDbaResponse.SerializeToString,
      ),
      'ExecuteFetchAsAllPrivs': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteFetchAsAllPrivs,
          request_deserializer=tabletmanagerdata__pb2.ExecuteFetchAsAllPrivsRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ExecuteFetchAsAllPrivsResponse.SerializeToString,
      ),
      'ExecuteFetchAsApp': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteFetchAsApp,
          request_deserializer=tabletmanagerdata__pb2.ExecuteFetchAsAppRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ExecuteFetchAsAppResponse.SerializeToString,
      ),
      'SubordinateStatus': grpc.unary_unary_rpc_method_handler(
          servicer.SubordinateStatus,
          request_deserializer=tabletmanagerdata__pb2.SubordinateStatusRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SubordinateStatusResponse.SerializeToString,
      ),
      'MainPosition': grpc.unary_unary_rpc_method_handler(
          servicer.MainPosition,
          request_deserializer=tabletmanagerdata__pb2.MainPositionRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.MainPositionResponse.SerializeToString,
      ),
      'StopSubordinate': grpc.unary_unary_rpc_method_handler(
          servicer.StopSubordinate,
          request_deserializer=tabletmanagerdata__pb2.StopSubordinateRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.StopSubordinateResponse.SerializeToString,
      ),
      'StopSubordinateMinimum': grpc.unary_unary_rpc_method_handler(
          servicer.StopSubordinateMinimum,
          request_deserializer=tabletmanagerdata__pb2.StopSubordinateMinimumRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.StopSubordinateMinimumResponse.SerializeToString,
      ),
      'StartSubordinate': grpc.unary_unary_rpc_method_handler(
          servicer.StartSubordinate,
          request_deserializer=tabletmanagerdata__pb2.StartSubordinateRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.StartSubordinateResponse.SerializeToString,
      ),
      'StartSubordinateUntilAfter': grpc.unary_unary_rpc_method_handler(
          servicer.StartSubordinateUntilAfter,
          request_deserializer=tabletmanagerdata__pb2.StartSubordinateUntilAfterRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.StartSubordinateUntilAfterResponse.SerializeToString,
      ),
      'TabletExternallyReparented': grpc.unary_unary_rpc_method_handler(
          servicer.TabletExternallyReparented,
          request_deserializer=tabletmanagerdata__pb2.TabletExternallyReparentedRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.TabletExternallyReparentedResponse.SerializeToString,
      ),
      'TabletExternallyElected': grpc.unary_unary_rpc_method_handler(
          servicer.TabletExternallyElected,
          request_deserializer=tabletmanagerdata__pb2.TabletExternallyElectedRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.TabletExternallyElectedResponse.SerializeToString,
      ),
      'GetSubordinates': grpc.unary_unary_rpc_method_handler(
          servicer.GetSubordinates,
          request_deserializer=tabletmanagerdata__pb2.GetSubordinatesRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.GetSubordinatesResponse.SerializeToString,
      ),
      'VReplicationExec': grpc.unary_unary_rpc_method_handler(
          servicer.VReplicationExec,
          request_deserializer=tabletmanagerdata__pb2.VReplicationExecRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.VReplicationExecResponse.SerializeToString,
      ),
      'VReplicationWaitForPos': grpc.unary_unary_rpc_method_handler(
          servicer.VReplicationWaitForPos,
          request_deserializer=tabletmanagerdata__pb2.VReplicationWaitForPosRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.VReplicationWaitForPosResponse.SerializeToString,
      ),
      'ResetReplication': grpc.unary_unary_rpc_method_handler(
          servicer.ResetReplication,
          request_deserializer=tabletmanagerdata__pb2.ResetReplicationRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.ResetReplicationResponse.SerializeToString,
      ),
      'InitMain': grpc.unary_unary_rpc_method_handler(
          servicer.InitMain,
          request_deserializer=tabletmanagerdata__pb2.InitMainRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.InitMainResponse.SerializeToString,
      ),
      'PopulateReparentJournal': grpc.unary_unary_rpc_method_handler(
          servicer.PopulateReparentJournal,
          request_deserializer=tabletmanagerdata__pb2.PopulateReparentJournalRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.PopulateReparentJournalResponse.SerializeToString,
      ),
      'InitSubordinate': grpc.unary_unary_rpc_method_handler(
          servicer.InitSubordinate,
          request_deserializer=tabletmanagerdata__pb2.InitSubordinateRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.InitSubordinateResponse.SerializeToString,
      ),
      'DemoteMain': grpc.unary_unary_rpc_method_handler(
          servicer.DemoteMain,
          request_deserializer=tabletmanagerdata__pb2.DemoteMainRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.DemoteMainResponse.SerializeToString,
      ),
      'UndoDemoteMain': grpc.unary_unary_rpc_method_handler(
          servicer.UndoDemoteMain,
          request_deserializer=tabletmanagerdata__pb2.UndoDemoteMainRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.UndoDemoteMainResponse.SerializeToString,
      ),
      'PromoteSubordinateWhenCaughtUp': grpc.unary_unary_rpc_method_handler(
          servicer.PromoteSubordinateWhenCaughtUp,
          request_deserializer=tabletmanagerdata__pb2.PromoteSubordinateWhenCaughtUpRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.PromoteSubordinateWhenCaughtUpResponse.SerializeToString,
      ),
      'SubordinateWasPromoted': grpc.unary_unary_rpc_method_handler(
          servicer.SubordinateWasPromoted,
          request_deserializer=tabletmanagerdata__pb2.SubordinateWasPromotedRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SubordinateWasPromotedResponse.SerializeToString,
      ),
      'SetMain': grpc.unary_unary_rpc_method_handler(
          servicer.SetMain,
          request_deserializer=tabletmanagerdata__pb2.SetMainRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SetMainResponse.SerializeToString,
      ),
      'SubordinateWasRestarted': grpc.unary_unary_rpc_method_handler(
          servicer.SubordinateWasRestarted,
          request_deserializer=tabletmanagerdata__pb2.SubordinateWasRestartedRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.SubordinateWasRestartedResponse.SerializeToString,
      ),
      'StopReplicationAndGetStatus': grpc.unary_unary_rpc_method_handler(
          servicer.StopReplicationAndGetStatus,
          request_deserializer=tabletmanagerdata__pb2.StopReplicationAndGetStatusRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.StopReplicationAndGetStatusResponse.SerializeToString,
      ),
      'PromoteSubordinate': grpc.unary_unary_rpc_method_handler(
          servicer.PromoteSubordinate,
          request_deserializer=tabletmanagerdata__pb2.PromoteSubordinateRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.PromoteSubordinateResponse.SerializeToString,
      ),
      'Backup': grpc.unary_stream_rpc_method_handler(
          servicer.Backup,
          request_deserializer=tabletmanagerdata__pb2.BackupRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.BackupResponse.SerializeToString,
      ),
      'RestoreFromBackup': grpc.unary_stream_rpc_method_handler(
          servicer.RestoreFromBackup,
          request_deserializer=tabletmanagerdata__pb2.RestoreFromBackupRequest.FromString,
          response_serializer=tabletmanagerdata__pb2.RestoreFromBackupResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'tabletmanagerservice.TabletManager', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
